Resources:
  #===== Logs
  HelloLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: 'hello-ecs-log-group'

  #===== ECS
  HelloEcrHelloWorld:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: hello-ecr-hello-world

  HelloCluster:
    Type: AWS::ECS::Cluster
    Properties: 
      CapacityProviders: 
        - 'FARGATE'
      ClusterName: 'hello-cluster'

  HelloTask:
    DependsOn: HelloLogGroup
    Type: AWS::ECS::TaskDefinition
    Properties: 
      Cpu: 256 
      ContainerDefinitions: 
        - Command: 
          - '/hello'
          Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${HelloEcrHelloWorld}:latest'
          LogConfiguration:
            LogDriver: 'awslogs'
            Options: 
              awslogs-group: !Ref HelloLogGroup
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: 'hello-task-stream'
          Name: 'hello-task-container'
          StopTimeout: 10
      ExecutionRoleArn: !GetAtt HelloRoleTaskExecution.Arn
      Family: 'hello-task-family'
      Memory: 512
      NetworkMode: 'awsvpc'
      RequiresCompatibilities: 
        - 'FARGATE'
      Tags: 
        - Key: 'Name'
          Value: 'Hello Task'

  #===== IAM
  HelloRoleTaskExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: 'Allow'
          Principal: 
            Service: 
              - 'ecs-tasks.amazonaws.com'
          Action: 
            - 'sts:AssumeRole'
      Description: 'Hello Role'
      ManagedPolicyArns: 
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
      RoleName: 'hello-role'

  # # HelloEcsInstanceRole:
  # #   Type: AWS::IAM::Role
  # #   Properties:
  # #     AssumeRolePolicyDocument:
  # #       Statement:
  # #         Effect: 'Allow'
  # #         Principal: 
  # #           Service: 
  # #             - 'ecs.amazonaws.com'
  # #         Action: 
  # #           - 'sts:AssumeRole'
  # #     Description: 'Hello Role'
  # #     ManagedPolicyArns: 
  # #       - 'arn:aws:iam::aws:policy/aws-service-role/AmazonECSServiceRolePolicy'
  # #     RoleName: 'hello-role2'    

    ########### ecsInstanceRole
  # "Statement": [
  #       {
  #           "Effect": "Allow",
  #           "Action": [
  #               "ecr:BatchCheckLayerAvailability",
  #               "ecr:BatchGetImage",
  #               "ecr:GetDownloadUrlForLayer",
  #               "ecr:GetAuthorizationToken"
  #           ],
  #           "Resource": "*"
  #       }
  #   ]