
# HelloEcrHttpd:
  #   Type: AWS::ECR::Repository
  #   Properties: 
  #     RepositoryName: 'hello-ecr-httpd'
  
 # HelloTask:
  #   # DependsOn: HelloLogGroup
  #   Type: AWS::ECS::TaskDefinition
  #   Properties:
  #     ContainerDefinitions: 
  #       # - Command: 
  #       #   - 'echo "HELLO TASK"'
  #       - Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${HelloEcrHttpd}:latest'
  #         # LogConfiguration:
  #         #   LogDriver: 'awslogs'
  #         #   Options: 
  #         #     awslogs-group: !Ref HelloLogGroup
  #         #     awslogs-region: !Sub ${AWS::Region}
  #         #     awslogs-stream-prefix: !Sub
  #         #       - 'hello-task-stream-${UniqueSuffix}'
  #         #       - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
  #         Name: !Sub
  #           - 'hello-task-container-${UniqueSuffix}'
  #           - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
  #         StopTimeout: 10
  #     Cpu: 256
  #     ExecutionRoleArn: !GetAtt HelloRoleTaskExecution.Arn
  #     Family: !Sub
  #       - 'hello-task-family-${UniqueSuffix}'
  #       - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
  #     Memory: 512
  #     Tags: 
  #       - Key: 'Name'
  #         Value: 'Hello Task'

# HelloEcs:
#   Type: AWS::ECS::Service
#   Properties: 
#     Cluster: !Ref HelloCluster
#     DesiredCount: 1
#     LaunchType: 'FARGATE'
#     NetworkConfiguration: 
#       AwsvpcConfiguration:
#         Subnets: 
#           - !Ref HelloSubnet
#     SchedulingStrategy: 'REPLICA'
#     ServiceName: 'hello-ecs'
#     TaskDefinition: !Ref HelloTask

  # # HelloEcsInstanceRole:
  # #   Type: AWS::IAM::Role
  # #   Properties:
  # #     AssumeRolePolicyDocument:
  # #       Statement:
  # #         Effect: 'Allow'
  # #         Principal: 
  # #           Service: 
  # #             - 'ecs.amazonaws.com'
  # #         Action: 
  # #           - 'sts:AssumeRole'
  # #     Description: 'Hello Role'
  # #     ManagedPolicyArns: 
  # #       - 'arn:aws:iam::aws:policy/aws-service-role/AmazonECSServiceRolePolicy'
  # #     RoleName: 'hello-role2'    

    ########### ecsInstanceRole
  # "Statement": [
  #       {
  #           "Effect": "Allow",
  #           "Action": [
  #               "ecr:BatchCheckLayerAvailability",
  #               "ecr:BatchGetImage",
  #               "ecr:GetDownloadUrlForLayer",
  #               "ecr:GetAuthorizationToken"
  #           ],
  #           "Resource": "*"
  #       }
  #   ]