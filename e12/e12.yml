Mappings:
  Instances:
    Settings:
      ImageId: 'ami-04bf6dcdc9ab498ca'
      InstanceType: 't2.micro'
  Application:
    Settings:
      AvailabilityZone: 'us-east-1a'
      UniqueSuffix: 'e12'

Resources:
  # HelloEcrHttpd:
  #   Type: AWS::ECR::Repository
  #   Properties: 
  #     RepositoryName: 'hello-ecr-httpd'
      
  # HelloCluster:
  #   Type: AWS::ECS::Cluster
  #   Properties: 
  #     CapacityProviders:
  #       - !Ref HelloCapacityProvider
  #     ClusterName: !Sub
  #       - 'hello-cluster-${UniqueSuffix}'
  #       - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

  # HelloCapacityProvider:
  #   Type: AWS::ECS::CapacityProvider
  #   Properties: 
  #     AutoScalingGroupProvider: 
  #       AutoScalingGroupArn: !Ref HelloAsg
  #     Name: !Sub
  #       - 'Hello-cp-${UniqueSuffix}'
  #       - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

 

  #===== Autoscaling
  # HelloLaunchTemplate:
  #   Type: AWS::EC2::LaunchTemplate
  #   Properties: 
  #     LaunchTemplateName: !Sub
  #       - 'hello-lt-${UniqueSuffix}'
  #       - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
  #     LaunchTemplateData: 
  #       IamInstanceProfile: 
  #         Arn: !GetAtt HelloInstanceProfile.Arn
  #       ImageId: !FindInMap [ Instances, Settings, ImageId ]
  #       InstanceInitiatedShutdownBehavior: 'terminate'
  #       InstanceType: !FindInMap [ Instances, Settings, InstanceType ]

  HelloAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AutoScalingGroupName: !Sub
        - 'hello-asg-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      AvailabilityZones: 
        - !FindInMap [ Application, Settings, AvailabilityZone ]
      LaunchTemplate: 
        LaunchTemplateId: !Ref HelloLaunchTemplate
        Version: !GetAtt HelloLaunchTemplate.LatestVersionNumber 
      MaxSize: 2
      MinSize: 1
  
  HelloScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties: 
      AdjustmentType: 'ChangeInCapacity'
      AutoScalingGroupName: !Ref HelloAsg
      PolicyType: 'StepScaling'
      StepAdjustments: 
        - MetricIntervalLowerBound: 20
          ScalingAdjustment: 1
        - MetricIntervalUpperBound: 20
          ScalingAdjustment: -1

  #===== IAM
  HelloRoleTaskExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: 'Allow'
          Principal: 
            Service: 
              - 'ecs-tasks.amazonaws.com'
          Action: 
            - 'sts:AssumeRole'
      Description: 'Hello Role'
      ManagedPolicyArns: 
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      RoleName: !Sub
        - 'hello-role-task-execution-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

  HelloSessionManagerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: 'Allow'
          Principal: 
            Service: 
              - 'ec2.amazonaws.com'
          Action: 
            - 'sts:AssumeRole'
      Description: 'Hello Role'
      ManagedPolicyArns: 
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      RoleName: !Sub
        - 'hello-role-session-manager-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

  HelloInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub
        - 'hello-instance-profile-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      Roles: 
        - !Ref HelloSessionManagerRole