# Parameters: 
#   DomainName: 
#     Type: String
#     Description: Fully qualified domain name

Mappings:
  Instances:
    Settings:
      ImageId: 'ami-04bf6dcdc9ab498ca'
      InstanceType: 't2.micro'
  Application:
    Settings:
      AvailabilityZone: 'us-east-1a'
      UniqueSuffix: 'e18'

Resources:
  #===== EC2
  HelloInstanceA: 
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: !FindInMap [ Application, Settings, AvailabilityZone ]
      IamInstanceProfile: !Ref HelloInstanceProfile
      ImageId: !FindInMap [ Instances, Settings, ImageId ]
      InstanceType: !FindInMap [ Instances, Settings, InstanceType ]
      Tags: 
        - Key: 'Name'
          Value: !Sub
            - 'Hello Instance A ${UniqueSuffix}'
            - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

  HelloInstanceB: 
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: !FindInMap [ Application, Settings, AvailabilityZone ]
      IamInstanceProfile: !Ref HelloInstanceProfile
      ImageId: !FindInMap [ Instances, Settings, ImageId ]
      InstanceType: !FindInMap [ Instances, Settings, InstanceType ]
      Tags: 
        - Key: 'Name'
          Value: !Sub
            - 'Hello Instance B ${UniqueSuffix}'
            - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

  #===== IAM
  HelloRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: 'Allow'
          Principal: 
            Service: 
              - 'ec2.amazonaws.com'
          Action: 
            - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      RoleName: !Sub
        - 'hello-role-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

  HelloInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub
        - 'hello-instance-profile-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      Roles: 
        - !Ref HelloRole

  #===== R53
  HelloRecord:
    Type: AWS::Route53::RecordSet
    Properties: 
      Failover: String
      HealthCheckId: !Ref HelloHealthCheckA
      HostedZoneId: !Ref HelloHostedZone
      Name: !Sub
        - 'hello-record-ec2A-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      ResourceRecords: 
        - String
      SetIdentifier: String
      TTL: '60'
      Type: 'A'


  #===== Health checks
  # HelloHealthCheckA:
  #   Type: AWS::Route53::HealthCheck
  #   Properties: 
  #     HealthCheckConfig:
  #       IPAddress: 192.0.2.44
  #       Port: 80
  #       Type: HTTP
  #       ResourcePath: '/'
  #       FullyQualifiedDomainName: !Ref DomainName
  #       RequestInterval: 30
  #       FailureThreshold: 3
  
  # HelloHostedZone:
  #   Type: AWS::Route53::HostedZone
  #   Properties: 
  #     Name: !Ref DomainName