Mappings:
  Instances:
    Settings:
      ImageId: 'ami-04bf6dcdc9ab498ca'
      InstanceType: 't2.micro'
  Network:
    Settings:
      SubnetCidrBlock: '10.16.0.0/24'
      VpcCidrBlock: '10.16.0.0/16'
  Application:
    Settings:
      AvailabilityZone: 'us-east-1a'
      UniqueSuffix: 'e09'

Resources:
  #===== Global Accelerator
  HelloGlobalAccelerator:
    Type: AWS::GlobalAccelerator::Accelerator
    Properties: 
      Enabled: true
      Name: !Sub
        - 'hello-accelerator-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

  HelloListener:
    Type: AWS::GlobalAccelerator::Listener
    Properties: 
      AcceleratorArn: !Ref HelloGlobalAccelerator
      PortRanges: 
        - FromPort: 80
          ToPort: 80
      Protocol: 'TCP'

  HelloEndpointGroup:
    Type: AWS::GlobalAccelerator::EndpointGroup
    Properties: 
      EndpointConfigurations: 
        - EndpointId: !Ref HelloInstance
      EndpointGroupRegion: !Ref AWS::Region
      ListenerArn: !Ref HelloListener

  #===== EC2
  HelloInstance: 
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT2M
    Properties: 
      AvailabilityZone: !FindInMap [ Application, Settings, AvailabilityZone ]
      IamInstanceProfile: !Ref HelloInstanceProfile
      ImageId: !FindInMap [ Instances, Settings, ImageId ]
      InstanceType: !FindInMap [ Instances, Settings, InstanceType ]
      Tags: 
        - Key: 'Name'
          Value: !Sub
            - 'Hello Instance ${UniqueSuffix}'
            - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          sudo yum install -y httpd
          sudo systemctl start httpd
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource HelloInstance --region ${AWS::Region}

  #===== VPC, IGW, subnet
  HelloVpc: 
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !FindInMap [ Network, Settings, VpcCidrBlock ]
      Tags: 
        - Key: 'Name' 
          Value: !Sub
            - 'Hello VPC ${UniqueSuffix}'
            - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

  HelloIgw: 
    Type: AWS::EC2::InternetGateway

  HelloVpcAttach: 
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref HelloIgw 
      VpcId: !Ref HelloVpc 
  
  HelloSubnet: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !FindInMap [ Application, Settings, AvailabilityZone ]
      CidrBlock: !FindInMap [ Network, Settings, SubnetCidrBlock ]
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: 'Name' 
          Value: !Sub
            - 'Hello subnet ${UniqueSuffix}'
            - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      VpcId: !Ref HelloVpc 

  #===== Route table
  HelloRouteIgw: 
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref HelloIgw 
      RouteTableId: !Ref HelloRtIgw 
  
  HelloRtIgw: 
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: 'Name' 
          Value: !Sub
            - 'Hello RT IGW ${UniqueSuffix}'
            - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      VpcId: !Ref HelloVpc 
    
  HelloRtIgwAssociate: 
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref HelloRtIgw 
      SubnetId: !Ref HelloSubnet

  #===== IAM
  HelloRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: 'Allow'
          Principal: 
            Service: 
              - 'ec2.amazonaws.com'
          Action: 
            - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      RoleName: !Sub
        - 'hello-role-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

  HelloInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub
        - 'hello-instance-profile-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      Roles: 
        - !Ref HelloRole