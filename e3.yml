Mappings:
  Instances:
    Settings:
      AvailabilityZone: 'us-east-1a'
      ImageId: 'ami-04bf6dcdc9ab498ca'
      InstanceType: 't2.micro'
  Application:
    Settings:
      UniqueSuffix: 'e3'

Resources: 
  HelloInstanceA: 
    Type: AWS::EC2::Instance
    Properties: 
        AvailabilityZone: !FindInMap [ Instances, Settings, AvailabilityZone ]
        IamInstanceProfile: !Ref HelloInstanceProfile
        ImageId: !FindInMap [ Instances, Settings, ImageId ]
        InstanceType: !FindInMap [ Instances, Settings, InstanceType ]
        Tags: 
          - Key: 'Name'
            Value: 'Hello Instance A'
  
  HelloInstanceB: 
    Type: AWS::EC2::Instance
    Properties: 
        AvailabilityZone: !FindInMap [ Instances, Settings, AvailabilityZone ]
        IamInstanceProfile: !Ref HelloInstanceProfile
        ImageId: !FindInMap [ Instances, Settings, ImageId ]
        InstanceType: !FindInMap [ Instances, Settings, InstanceType ]
        Tags: 
          - Key: 'Name'
            Value: 'Hello Instance B'
        
  #===== IAM
  HelloRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: 'Allow'
          Principal: 
            Service: 
              - 'ec2.amazonaws.com'
          Action: 
            - 'sts:AssumeRole'
      Description: 'Hello Role'
      ManagedPolicyArns: 
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      RoleName: !Sub
        - 'hello-role-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

  HelloInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub
        - 'hello-instance-profile-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      Roles: 
        - !Ref HelloRole