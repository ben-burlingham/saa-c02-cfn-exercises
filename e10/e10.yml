Mappings:
  Instances:
    Settings:
      ImageId: 'ami-04bf6dcdc9ab498ca'
      InstanceType: 't2.micro'
  Application:
    Settings:
      AvailabilityZone: 'us-east-1a'
      UniqueSuffix: 'e10'

Resources:
  #===== ASG
  HelloLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub
        - 'hello-lt-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      LaunchTemplateData: 
        IamInstanceProfile: 
          Arn: !GetAtt HelloInstanceProfile.Arn
        ImageId: !FindInMap [ Instances, Settings, ImageId ]
        InstanceInitiatedShutdownBehavior: 'terminate'
        InstanceType: !FindInMap [ Instances, Settings, InstanceType ]

  HelloAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AutoScalingGroupName: !Sub
        - 'hello-asg-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      AvailabilityZones: 
        - !FindInMap [ Application, Settings, AvailabilityZone ]
      LaunchTemplate: 
        LaunchTemplateId: !Ref HelloLaunchTemplate
        Version: !GetAtt HelloLaunchTemplate.LatestVersionNumber 
      # LoadBalancerNames: 
      #   - String
      MaxSize: 2
      MinSize: 1
  
  HelloScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties: 
      AdjustmentType: 'ChangeInCapacity'
      AutoScalingGroupName: !Ref HelloAsg
      PolicyType: 'StepScaling'
      StepAdjustments: 
        - MetricIntervalLowerBound: 20
          ScalingAdjustment: 1
        - MetricIntervalUpperBound: 20
          ScalingAdjustment: -1

  #===== Cloudwatch
  HelloAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties: 
      AlarmActions: 
        - !Ref HelloScalingPolicy
      AlarmName: !Sub
        - 'hello-alarm-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      ComparisonOperator: 'GreaterThanThreshold'
      Dimensions:
        - Name: 'AutoScalingGroupName'
          Value: !Ref HelloAsg
      EvaluationPeriods: 1
      MetricName: 'CPUUtilization'
      Namespace: 'AWS/EC2'
      Period: 60
      Statistic: 'Average'
      Threshold: 20
      Unit: 'Percent'

  #===== IAM
  HelloRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: 'Allow'
          Principal: 
            Service: 
              - 'ec2.amazonaws.com'
          Action: 
            - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      RoleName: !Sub
        - 'hello-role-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]

  HelloInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub
        - 'hello-instance-profile-${UniqueSuffix}'
        - UniqueSuffix: !FindInMap [ Application, Settings, UniqueSuffix ]
      Roles: 
        - !Ref HelloRole
